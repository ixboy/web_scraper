doc2 = doc.split('IMDb:')[0]
doc2 = doc.split('IMDb:')[1]
doc2 = doc.split('IMDb:').first
doc2 = doc.split('IMDb:').last
doc2 = doc.split('IMDb:').size
doc2 = doc.split('min').size
doc2 = doc.split('Genre:').size
doc2 = doc.split('Genre:').last
doc2 = doc.split('Genre').last
doc2 = doc.split('Genre').first
doc2 = doc.split('Genre').size
doc2 = doc.split(':').size
doc2 = doc.split('Genre').size
doc2 = doc.split('Genre:').size
doc2 = doc.split('Genre:')

doc2.first
doc2.size
doc2 = doc.split('Country:')
doc.split('Country:')
doc.split('Country:').size
doc
doc.split(':').size
doc.split('/\').size
doc.split('\').size
doc.split('-').size
doc.split(':').size
doc.split(',').size
doc.split(',')
doc.split('.').lenght
doc.split('.').lemght
doc.split('.').size
doc.split('.')
doc
doc[42]
doc.first.text
doc.first
doc[0]
doc.split
doc

doc
doc = parsed_page.css('div #hidden_tip').text
doc
parsed_page.css('div #hidden_tip').text
doc = parsed_page.css('div #hidden_tip').count
parsed_page.css('div #hidden_tip').count
parsed_page.css('div #hidden_tip').text
parsed_page.css('div #hidden_tip .qtip-title').text
parsed_page.css('div #hidden_tip').count
parsed_page.css('div #hidden_tip').text
parsed_page.css('div #hidden_tip')
parsed_page.css('div #hidden_tip .qtip-title').text
parsed_page.css('div #hidden_tip .qtip-title').first.text
parsed_page.css('div #hidden_tip .qtip-title').first
parsed_page.css('div #hidden_tip .qtip-title').count
parsed_page.css('div #hidden_tip .qtip-title').text
parsed_page.css('div #hidden_tip').text
parsed_page.css('div #hidden_tip .jtip-quality').text
parsed_page.first.text
parsed_page.text
parsed_page
test.text
test
exit
next
movies.text
movies.content.text
movies.content
movies.css('div.item .title').content
movies.css('div.item .title').text
movie.css('div.item .title').text
film
title1
url
exit
next
film
next
movies.css('div.item .meta').text
movies.css('div.item .title').text
movies.text
movies
film
exit
continue
film
exit
continue
film
continue
film
url
continue
doc.text
doc
film
continue
movies.text
movies.
movies.css('div.item .title').text
movies.text
movies.title.text
movies.text
movies.text.title.text
movies.text.title
movies.text
movies
film
film[:info]
film[:title]
url
continue
parsed_page.css('div.item .meta')[0].text
parsed_page.css('div.item .quality')[0].text
parsed_page.css('div.item .dot')[0].text
parsed_page.css('div.item .meta')[0].text
parsed_page.css('div.item .meta').text
parsed_page.css('div.item .title')[0].text
parsed_page.css('div.item .title').text
parsed_page.css('div.item .title')text
parsed_page.css('div.item .title')
parsed_page.css('div.item .title').each { |link| puts link.content }.text
parsed_page.css('div.item').text
parsed_page.css('div.item')
parsed_page.css('div.item)
parsed_page.css('div.item a').map{ |link| link['href']}.last
parsed_page.css('div.item a').map{ |link| link['href']}.first
parsed_page.css('div.item a').map{ |link| link['href']}first
parsed_page.css('div.item a').map{ |link| link['href']}.text
parsed_page.css('div.item a').map{ |link| link['href']}
parsed_page.css('div.item a')
parsed_page.css('div.item a')['href']
parsed_page.css('div.item a').text
parsed_page.css('div.item a')
parsed_page.css('div.item a')[1].attributes['href'].value
parsed_page.css('div.item a')last.attributes['href'].value
parsed_page.css('div.item a')first.attributes['href'].value
parsed_page.css('div.item a')[1].attributes['href'].value
parsed_page.css('div.item a')[2].attributes['href'].value
parsed_page.css('div.item a')[0].attributes['href'].value
parsed_page.css('div.item a').attributes['href'].value
parsed_page.css('div.item a')[0].attributes['href'].value
parsed_page.css('div.item a')[0].attributes
parsed_page.css('div.item a')[0]
parsed_page.css('div.item a').first
parsed_page.css('div.item a')
parsed_page.css('div.item a').text
parsed_page.css('div.item a')
parsed_page.css('a')
parsed_page.css('a')[0]
parsed_page.css('a').text
parsed_page.css('a')
parsed_page.css('div.item 
parsed_page.css('div.item .meta')first.text
parsed_page.css('div.item .meta').text
parsed_page.css('div.item .meta').each { |link| puts link.content }.text
parsed_page.css('div.item .type').each { |link| puts link.content }.text
parsed_page.css('div.item .dot').each { |link| puts link.content }.text
parsed_page.css('div.item .meta').each { |link| puts link.content }.text
parsed_page.css('div.item .title').each { |link| puts link.content }.text
parsed_page.css('div.item .title').each { |link| puts link.content.text }
parsed_page.css('div.item .title').each { |link| puts link.content }
parsed_page.css('div.item .title').each { |link| puts link }
parsed_page.css('div.item .title').each { |link| puts link }.text
parsed_page.css('div.item .title').each { |link| link }.text
parsed_page.css('div.item .title').map { |link| link }.text
parsed_page.css('div.item .title').map { |link| link }
parsed_page.css('div.item .title').text
parsed_page.css('div.item .title').first.text
parsed_page.css('div.item .title').first.title
parsed_page.css('div.item .title').first.tile
parsed_page.css('div.item .title').text
parsed_page.css('div.item .title')
parsed_page.css('div.item a .title')
parsed_page.css('div.item a .title').text.first
parsed_page.css('div.item a .title').text
parsed_page.css('div.item .title')
parsed_page.css('div.item a .title')
parsed_page.css('div.item a .title').map { |link| link['href'] }.first
parsed_page.css('div.item a').map { |link| link['href'] }.first
parsed_page.css('div.item div.title')
parsed_page.css('div.item div.title').text
parsed_page.css('div.item div.title').first.text
parsed_page.css('div.item div.quality').first.text
parsed_page.css('div.item div.quality').first
parsed_page.css('div.item div.quality')
parsed_page.css('div.item div a').text
parsed_page.css('div.title').first
parsed_page.css('div.title')
parsed_page.css('div.item a').map { |link| link['href'] }.first
parsed_page.css('div.item a').map { |link| link['href'] }.last
parsed_page.css('div.item a').map { |link| link['href'] }.first
parsed_page.css('div.item a').map { |link| link['href'] }.text
parsed_page.css('div.item a').map { |link| link['href'].text }
parsed_page.css('div.item a').map { |link| link.['href'].text }
parsed_page.css('div.item a').map { |link| link.first['href'] }
parsed_page.css('div.item a').map { |link| link['href'].first }
parsed_page.css('div.item a').map { |link| link['href'] }
parsed_page.css('div.item div a').map { |link| link['href'] }
parsed_page.css('div.item div a[href]')
parsed_page.css('div.item div a')
parsed_page.css('div.item div a').text
parsed_page.css('div.item div.quality').text
parsed_page.css('div.item div.quality')
parsed_page.css('a').text
parsed_page.css('.fa-star').text
parsed_page.css('.fa-star')
parsed_page.css('.fa-star').text
parsed_page.css('i.fa-star').text
parsed_page.css('i.fa').text
parsed_page.css('.fa').text
parsed_page.css('.poster').text
parsed_page.css('.quality').text
parsed_page.css('.quality').first.text
parsed_page.css('div.quality').first.text
parsed_page.css('div.item').first.text
parsed_page.css('.item').first.text
parsed_page.css('.item').text
parsed_page.css('.filmlist').text
parsed_page.body
parsed_page
url
exit
Nokogiri
url
exit
unparsed_page.body.css
unparsed_page.body
unparsed_page
url
continue
